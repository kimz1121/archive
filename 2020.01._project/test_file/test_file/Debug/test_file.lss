
test_file.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000180  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009b0  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080c  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000032f  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000016f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042d  00000000  00000000  0000171c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  00001b49  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001cb1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	46 c0       	rjmp	.+140    	; 0x128 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRD = 0b00111111;
  9e:	8f e3       	ldi	r24, 0x3F	; 63
  a0:	81 bb       	out	0x11, r24	; 17
    /* Replace with your application code */
    while (1) 
    {
			PORTD = 0b100100;
  a2:	54 e2       	ldi	r21, 0x24	; 36
			_delay_ms(1000);
			PORTD = 0b100001;
  a4:	41 e2       	ldi	r20, 0x21	; 33
			_delay_ms(1000);
			PORTD = 0b001001;
  a6:	39 e0       	ldi	r19, 0x09	; 9
			_delay_ms(1000);
			PORTD = 0b011000;
  a8:	28 e1       	ldi	r18, 0x18	; 24
			_delay_ms(1000);
			PORTD = 0b010010;
  aa:	92 e1       	ldi	r25, 0x12	; 18
			_delay_ms(1000);
			PORTD = 0b000110;
  ac:	86 e0       	ldi	r24, 0x06	; 6
{
	DDRD = 0b00111111;
    /* Replace with your application code */
    while (1) 
    {
			PORTD = 0b100100;
  ae:	52 bb       	out	0x12, r21	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	6f e3       	ldi	r22, 0x3F	; 63
  b2:	7d e0       	ldi	r23, 0x0D	; 13
  b4:	e3 e0       	ldi	r30, 0x03	; 3
  b6:	61 50       	subi	r22, 0x01	; 1
  b8:	70 40       	sbci	r23, 0x00	; 0
  ba:	e0 40       	sbci	r30, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x18>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x22>
  c0:	00 00       	nop
			_delay_ms(1000);
			PORTD = 0b100001;
  c2:	42 bb       	out	0x12, r20	; 18
  c4:	6f e3       	ldi	r22, 0x3F	; 63
  c6:	7d e0       	ldi	r23, 0x0D	; 13
  c8:	e3 e0       	ldi	r30, 0x03	; 3
  ca:	61 50       	subi	r22, 0x01	; 1
  cc:	70 40       	sbci	r23, 0x00	; 0
  ce:	e0 40       	sbci	r30, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x2c>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x36>
  d4:	00 00       	nop
			_delay_ms(1000);
			PORTD = 0b001001;
  d6:	32 bb       	out	0x12, r19	; 18
  d8:	6f e3       	ldi	r22, 0x3F	; 63
  da:	7d e0       	ldi	r23, 0x0D	; 13
  dc:	e3 e0       	ldi	r30, 0x03	; 3
  de:	61 50       	subi	r22, 0x01	; 1
  e0:	70 40       	sbci	r23, 0x00	; 0
  e2:	e0 40       	sbci	r30, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x40>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x4a>
  e8:	00 00       	nop
			_delay_ms(1000);
			PORTD = 0b011000;
  ea:	22 bb       	out	0x12, r18	; 18
  ec:	6f e3       	ldi	r22, 0x3F	; 63
  ee:	7d e0       	ldi	r23, 0x0D	; 13
  f0:	e3 e0       	ldi	r30, 0x03	; 3
  f2:	61 50       	subi	r22, 0x01	; 1
  f4:	70 40       	sbci	r23, 0x00	; 0
  f6:	e0 40       	sbci	r30, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x54>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x5e>
  fc:	00 00       	nop
			_delay_ms(1000);
			PORTD = 0b010010;
  fe:	92 bb       	out	0x12, r25	; 18
 100:	6f e3       	ldi	r22, 0x3F	; 63
 102:	7d e0       	ldi	r23, 0x0D	; 13
 104:	e3 e0       	ldi	r30, 0x03	; 3
 106:	61 50       	subi	r22, 0x01	; 1
 108:	70 40       	sbci	r23, 0x00	; 0
 10a:	e0 40       	sbci	r30, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x68>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x72>
 110:	00 00       	nop
			_delay_ms(1000);
			PORTD = 0b000110;
 112:	82 bb       	out	0x12, r24	; 18
 114:	6f e3       	ldi	r22, 0x3F	; 63
 116:	7d e0       	ldi	r23, 0x0D	; 13
 118:	e3 e0       	ldi	r30, 0x03	; 3
 11a:	61 50       	subi	r22, 0x01	; 1
 11c:	70 40       	sbci	r23, 0x00	; 0
 11e:	e0 40       	sbci	r30, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x7c>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x86>
 124:	00 00       	nop
 126:	c3 cf       	rjmp	.-122    	; 0xae <main+0x10>

00000128 <_exit>:
 128:	f8 94       	cli

0000012a <__stop_program>:
 12a:	ff cf       	rjmp	.-2      	; 0x12a <__stop_program>
